package ru.alex_life.collections.arraylist;

import java.util.ArrayList;

/**
 * Видео-курс UDEMY Java для начинающих
 * 20. Всё о классе ArrayList
 *
 * Особенности:
 * 1. Это структура (список) данных, которая содержит в себе неупорядоченные элементы, допускает содержание дублей,
 * и элементы этой структуры пронумерованы (есть индексация как в массиве)
 * 2. Надо использовать когда нужна структура массива, но при этом можно увеличивать его размер, удалять или добавлять элементы,
 * т.е ArrayList это массив который может изменять свою длину
 * 3. Типом данных в основе ArrayList является Object (самый главный класс в Java, родитель всех классов),
 * т.е. типом данных ArrayList являются любые ссылочные типы, но не примитивные, элементами ArrayList могут быть любые объекты
 * 4. По умолчанию capacity = 10 элементов. Когда необходимо записать во внутренний массив ещё один элемент, а места там нет,
 * то внутри ArrayList происходит вот что:
 *     Создается новый массив размером, в 1.5 раза больше исходного, плюс один элемент.
 *     Все элементы из старого массива копируются в новый массив
 *     Новый массив сохраняется во внутренней переменной объекта ArrayList, а старый массив объявляется мусором.
 * Capacity — под сколько элементов памяти выделено, Count — сколько элементов фактически добавлено
 *
 * @author Alex_life
 * @version 1.0
 * @since 10.04.2022
 */
public class ArrayListUse {
    public static void main(String[] args) {
        ArrayList list = new ArrayList(); //создаем Аррэйлист. по умолчанию capacity = 10 элементов.
                                          //можно сразу в параметре задать нужное кол-во элементов - int, например (30)
        list.add("privet");  //добавляем Стринг
        Car car = new Car();   //создаем объект класса Car
        list.add(car);         //добавляем его в лист
        Student student = new Student(); //создаем объект класса Student
        list.add(student);               //добавляем его в лист
        list.add(new StringBuilder("ok"));   //добавляем Стрингбилдер
        // итого в аррэйлист мы добавили 4 объекта с разными типами данных
        // но обычно добавляют элементы одного типа данных, чтобы это сделать - используют <дженерики>
        ArrayList<String> list2 = new ArrayList<>(); //создали Аррэйлист с типом данных String, т.е. в него можно
                                                     //помещать только элементы типа String
        list2.add("ok"); //жоавили стринг
        //list2.add(car); //если попробавать добавить что угодно кроме Стринг - компилятор будет ругаться

        ArrayList<String> list3 = new ArrayList<>(list2); //в параметр можно добавить другой Аррэйлист
        System.out.println(list3 == list2); //сравниваем и получаем фолс, потому что list2 ссылется на другой Аррэйлист
    }
}

class Car { //создаем новый класс
}

class Student { //создаем новый класс
}
